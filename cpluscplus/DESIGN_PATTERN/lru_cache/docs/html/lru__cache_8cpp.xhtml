<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>C++ LRU Cache Template: lru_cache.cpp File Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">C++ LRU Cache Template
   &#160;<span id="projectnumber">1.4</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('lru__cache_8cpp.xhtml','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#typedef-members">Typedefs</a> &#124;
<a href="#func-members">Functions</a> &#124;
<a href="#var-members">Variables</a>  </div>
  <div class="headertitle">
<div class="title">lru_cache.cpp File Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p><a href="lru__cache_8cpp_source.xhtml">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="typedef-members"></a>
Typedefs</h2></td></tr>
<tr class="memitem:a4b7750098474ad59a0443520f69a77c9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a4b7750098474ad59a0443520f69a77c9"></a>
typedef <a class="el" href="classLRUCache.xhtml">LRUCache</a>&lt; std::string, <br class="typebreak"/>
std::string &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lru__cache_8cpp.xhtml#a4b7750098474ad59a0443520f69a77c9">unit_lru_type</a></td></tr>
<tr class="memdesc:a4b7750098474ad59a0443520f69a77c9"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">LRUCache</a> type for use in the unit tests. <br/></td></tr>
<tr class="memitem:ac6438824538d155d5a47bd7b2e7228ea"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ac6438824538d155d5a47bd7b2e7228ea"></a>
typedef <a class="el" href="classLRUCache.xhtml">LRUCache</a>&lt; int, int &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lru__cache_8cpp.xhtml#ac6438824538d155d5a47bd7b2e7228ea">unit_lru_type2</a></td></tr>
<tr class="memdesc:ac6438824538d155d5a47bd7b2e7228ea"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">LRUCache</a> POD type for use in the unit tests. <br/></td></tr>
<tr class="memitem:a3d24a3719faded87a48b68c87a6064a7"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a3d24a3719faded87a48b68c87a6064a7"></a>
typedef <a class="el" href="classLRUCache.xhtml">LRUCache</a>&lt; int, <br class="typebreak"/>
test_big_data &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lru__cache_8cpp.xhtml#a3d24a3719faded87a48b68c87a6064a7">unit_lru_type3</a></td></tr>
<tr class="memdesc:a3d24a3719faded87a48b68c87a6064a7"><td class="mdescLeft">&#160;</td><td class="mdescRight"><a class="el" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">LRUCache</a> with large data for use in the unit tests. <br/></td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:a5cc6945fc2f7ed6a7c8481972f4e172c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a5cc6945fc2f7ed6a7c8481972f4e172c"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c">dump</a> (<a class="el" href="lru__cache_8cpp.xhtml#a4b7750098474ad59a0443520f69a77c9">unit_lru_type</a> *L)</td></tr>
<tr class="memdesc:a5cc6945fc2f7ed6a7c8481972f4e172c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Dumps the cache for debugging. <br/></td></tr>
<tr class="memitem:a744e96854fa4e01ab945ea9ad43b39ca"><td class="memItemLeft" align="right" valign="top"><a class="el" href="unit__test_8h.xhtml#a5f3fe0e0e85d0dc03672f96e5e95856f">UNIT_TEST_DEFINES</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lru__cache_8cpp.xhtml#a744e96854fa4e01ab945ea9ad43b39ca">DEFINE_TEST</a> (lru_cache_1cycle)</td></tr>
<tr class="memitem:a92b18aa64a57a02c1adc3d1b98924bb5"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lru__cache_8cpp.xhtml#a92b18aa64a57a02c1adc3d1b98924bb5">DEFINE_TEST</a> (lru_cache_stress)</td></tr>
<tr class="memitem:a6288e1898f19682582c52a5005e10ada"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lru__cache_8cpp.xhtml#a6288e1898f19682582c52a5005e10ada">DEFINE_TEST</a> (lru_cache_scope_check)</td></tr>
<tr class="memitem:a7403186cac9b12671fdda33ea88bceb0"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lru__cache_8cpp.xhtml#a7403186cac9b12671fdda33ea88bceb0">DEFINE_TEST</a> (lru_cache_threads)</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2><a name="var-members"></a>
Variables</h2></td></tr>
<tr class="memitem:a438505aa6f516b0b948a59d1578a9b1c"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a438505aa6f516b0b948a59d1578a9b1c"></a>
<a class="el" href="lru__cache_8cpp.xhtml#a3d24a3719faded87a48b68c87a6064a7">unit_lru_type3</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="lru__cache_8cpp.xhtml#a438505aa6f516b0b948a59d1578a9b1c">L3</a></td></tr>
<tr class="memdesc:a438505aa6f516b0b948a59d1578a9b1c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Scoping test object. <br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>Template cache with an LRU removal policy (unit tests) </p>
<dl class="section author"><dt>Author:</dt><dd>Patrick Audley </dd></dl>

<p>Definition in file <a class="el" href="lru__cache_8cpp_source.xhtml">lru_cache.cpp</a>.</p>
</div><hr/><h2>Function Documentation</h2>
<a class="anchor" id="a744e96854fa4e01ab945ea9ad43b39ca"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="unit__test_8h.xhtml#a5f3fe0e0e85d0dc03672f96e5e95856f">UNIT_TEST_DEFINES</a> DEFINE_TEST </td>
          <td>(</td>
          <td class="paramtype">lru_cache_1cycle&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="test"><dt><b><a class="el" href="test.xhtml#_test000001">Test:</a></b></dt><dd>Basic creation and desctruction test </dd></dl>

<p>Definition at line <a class="el" href="lru__cache_8cpp_source.xhtml#l00050">50</a> of file <a class="el" href="lru__cache_8cpp_source.xhtml">lru_cache.cpp</a>.</p>

<p>References <a class="el" href="lru__cache_8h_source.xhtml#l00121">LRUCache&lt; Key, Data, Sizefn &gt;::clear()</a>, <a class="el" href="lru__cache_8cpp_source.xhtml#l00031">dump()</a>, <a class="el" href="lru__cache_8h_source.xhtml#l00133">LRUCache&lt; Key, Data, Sizefn &gt;::exists()</a>, <a class="el" href="lru__cache_8h_source.xhtml#l00179">LRUCache&lt; Key, Data, Sizefn &gt;::fetch()</a>, <a class="el" href="lru__cache_8h_source.xhtml#l00211">LRUCache&lt; Key, Data, Sizefn &gt;::insert()</a>, <a class="el" href="lru__cache_8h_source.xhtml#l00118">LRUCache&lt; Key, Data, Sizefn &gt;::max_size()</a>, <a class="el" href="lru__cache_8h_source.xhtml#l00144">LRUCache&lt; Key, Data, Sizefn &gt;::remove()</a>, <a class="el" href="lru__cache_8h_source.xhtml#l00113">LRUCache&lt; Key, Data, Sizefn &gt;::size()</a>, <a class="el" href="lru__cache_8h_source.xhtml#l00156">LRUCache&lt; Key, Data, Sizefn &gt;::touch()</a>, <a class="el" href="unit__test_8h_source.xhtml#l00205">unit_assert</a>, and <a class="el" href="unit__test_8h_source.xhtml#l00213">unit_pass</a>.</p>
<div class="fragment"><div class="line">                                {</div>
<div class="line">        <span class="keyword">const</span> std::string unit_data_1cycle_a(<span class="stringliteral">&quot;foo:4\n&quot;</span>);</div>
<div class="line">        <span class="keyword">const</span> std::string unit_data_1cycle_b(<span class="stringliteral">&quot;bar:flower\nfoo:4\n&quot;</span>);</div>
<div class="line">        <span class="keyword">const</span> std::string unit_data_1cycle_c(<span class="stringliteral">&quot;foo:4\nbar:flower\n&quot;</span>);</div>
<div class="line">        <span class="keyword">const</span> std::string unit_data_1cycle_d(<span class="stringliteral">&quot;foo:moose\nbaz:Stalin\nbar:flower\n&quot;</span>);</div>
<div class="line">        <span class="keyword">const</span> std::string unit_data_1cycle_e(<span class="stringliteral">&quot;foo:moose\nbar:flower\n&quot;</span>);</div>
<div class="line">        <span class="keyword">const</span> std::string unit_data_1cycle_f(<span class="stringliteral">&quot;quz:xyzzy\nbaz:monkey\nfoo:moose\n&quot;</span>);</div>
<div class="line">        <span class="keyword">const</span> std::string unit_data_1cycle_g(<span class="stringliteral">&quot;coat:mouse\npants:cat\nsocks:bear\n&quot;</span>);</div>
<div class="line"></div>
<div class="line">        <a class="code" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">unit_lru_type</a> *L = <span class="keyword">new</span> <a class="code" href="lru__cache_8cpp.xhtml#a4b7750098474ad59a0443520f69a77c9" title="LRUCache type for use in the unit tests.">unit_lru_type</a>(3);</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;size==0&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3a521aa7646757957a53850db90ad289" title="Gets the current abstract size of the cache.">size</a>() == 0) );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;maxsize==3&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3b625a8778e0dc1e5e69da3c331b9751" title="Gets the maximum sbstract size of the cache.">max_size</a>() == 3) );</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Checking a bogus key shouldn&#39;t alter the cache.</span></div>
<div class="line">        L-&gt;<a class="code" href="classLRUCache.xhtml#aa095f7527b11c4fb1bfad28bc06c91a6" title="Checks for the existance of a key in the cache.">exists</a>( <span class="stringliteral">&quot;foo&quot;</span> );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;exists() doesn&#39;t increase size&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3a521aa7646757957a53850db90ad289" title="Gets the current abstract size of the cache.">size</a>() == 0) );</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Check insert() and exists()</span></div>
<div class="line">        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;foo&quot;</span>, <span class="stringliteral">&quot;4&quot;</span> );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;size==1 after insert(foo,4)&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3a521aa7646757957a53850db90ad289" title="Gets the current abstract size of the cache.">size</a>() == 1) );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;check exists(foo)&quot;</span>, L-&gt;<a class="code" href="classLRUCache.xhtml#aa095f7527b11c4fb1bfad28bc06c91a6" title="Checks for the existance of a key in the cache.">exists</a>( <span class="stringliteral">&quot;foo&quot;</span> ) );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;contents check a)&quot;</span>, unit_data_1cycle_a.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Check second insert and ordering</span></div>
<div class="line">        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;bar&quot;</span>, <span class="stringliteral">&quot;flower&quot;</span> );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;size==2 after insert(bar,flower)&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3a521aa7646757957a53850db90ad289" title="Gets the current abstract size of the cache.">size</a>() == 2) );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;contents check b)&quot;</span>, unit_data_1cycle_b.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Check touching</span></div>
<div class="line">        L-&gt;<a class="code" href="classLRUCache.xhtml#a844206e9e2fde04aaf11c638725f2c29" title="Touches a key in the Cache and makes it the most recently used.">touch</a>( <span class="stringliteral">&quot;foo&quot;</span> );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;contents check c)&quot;</span>, unit_data_1cycle_c.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Insert of an existing element should result in only a touch</span></div>
<div class="line">        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;bar&quot;</span>, <span class="stringliteral">&quot;flower&quot;</span> );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;verify insert touches&quot;</span>, unit_data_1cycle_b.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Verify that fetch works</span></div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;verify fetch(bar)&quot;</span>, ( std::string(<span class="stringliteral">&quot;flower&quot;</span>).compare( L-&gt;<a class="code" href="classLRUCache.xhtml#a5896c9481fb649f5570fb8677c33b49c" title="Fetches a copy of cached data.">fetch</a>(<span class="stringliteral">&quot;bar&quot;</span>) ) == 0 ) );</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Insert of an existing element with new data should replace and touch</span></div>
<div class="line">        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;baz&quot;</span>, <span class="stringliteral">&quot;Stalin&quot;</span> );</div>
<div class="line">        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;foo&quot;</span>, <span class="stringliteral">&quot;moose&quot;</span> );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;verify insert replaces&quot;</span>, unit_data_1cycle_d.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Test removal of an existing member.</span></div>
<div class="line">        L-&gt;<a class="code" href="classLRUCache.xhtml#a34e974cf87c08620131a9b006443e93b" title="Removes a key-data pair from the cache.">remove</a>( <span class="stringliteral">&quot;baz&quot;</span> );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;verify remove works&quot;</span>, unit_data_1cycle_e.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Test LRU removal as we add more members than max_size()</span></div>
<div class="line">        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;baz&quot;</span>, <span class="stringliteral">&quot;monkey&quot;</span> );</div>
<div class="line">        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;quz&quot;</span>, <span class="stringliteral">&quot;xyzzy&quot;</span> );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;verify LRU semantics&quot;</span>, unit_data_1cycle_f.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Stress test the implementation a little..</span></div>
<div class="line">        <span class="keyword">const</span> <span class="keywordtype">char</span> *names[10] = { <span class="stringliteral">&quot;moose&quot;</span>, <span class="stringliteral">&quot;dog&quot;</span>, <span class="stringliteral">&quot;bear&quot;</span>, <span class="stringliteral">&quot;cat&quot;</span>, <span class="stringliteral">&quot;mouse&quot;</span>, <span class="stringliteral">&quot;hat&quot;</span>, <span class="stringliteral">&quot;mittens&quot;</span>, <span class="stringliteral">&quot;socks&quot;</span>, <span class="stringliteral">&quot;pants&quot;</span>, <span class="stringliteral">&quot;coat&quot;</span> };</div>
<div class="line">        <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i = 0; i &lt; 50; i++ ) {</div>
<div class="line">                L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( names[ i % 10 ], names[ i % 9 ] );</div>
<div class="line">        }</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;stress test a little&quot;</span>, unit_data_1cycle_g.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Setup a little for the third test which verifies that scoped references inserted into the cache don&#39;t disappear.</span></div>
<div class="line">        <a class="code" href="lru__cache_8cpp.xhtml#a438505aa6f516b0b948a59d1578a9b1c" title="Scoping test object.">L3</a> = <span class="keyword">new</span> <a class="code" href="lru__cache_8cpp.xhtml#a3d24a3719faded87a48b68c87a6064a7" title="LRUCache with large data for use in the unit tests.">unit_lru_type3</a>(2);</div>
<div class="line">        <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i = 0; i &lt; 10; i++ ) {</div>
<div class="line">                test_big_data B;</div>
<div class="line">                snprintf( B.buffer, 1000, <span class="stringliteral">&quot;%d\n&quot;</span>, i );</div>
<div class="line">                L3-&gt;insert( i, B );</div>
<div class="line">        }</div>
<div class="line"></div>
<div class="line">        <span class="comment">// Check that clear fully clears.</span></div>
<div class="line">        <span class="comment">//   Bug discovered by:  月迷津渡 gdcex@qq.com</span></div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;very size before clear.&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3a521aa7646757957a53850db90ad289" title="Gets the current abstract size of the cache.">size</a>() &gt; 0) );</div>
<div class="line">        L-&gt;<a class="code" href="classLRUCache.xhtml#ad59b44b509fcef46b3666695c5e4a1aa" title="Clears all storage and indices.">clear</a>();</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;very size after clear.&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3a521aa7646757957a53850db90ad289" title="Gets the current abstract size of the cache.">size</a>() == 0) );</div>
<div class="line"></div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa2a4504968cf4e8abfc7b706106d4084" title="Use to end a unit test in success.">unit_pass</a>();</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="lru__cache_8cpp_a744e96854fa4e01ab945ea9ad43b39ca_cgraph.svg" width="539" height="454"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a92b18aa64a57a02c1adc3d1b98924bb5"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFINE_TEST </td>
          <td>(</td>
          <td class="paramtype">lru_cache_stress&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="test"><dt><b><a class="el" href="test.xhtml#_test000002">Test:</a></b></dt><dd>Insert lots of objects and benchmark the rate. </dd></dl>

<p>Definition at line <a class="el" href="lru__cache_8cpp_source.xhtml#l00129">129</a> of file <a class="el" href="lru__cache_8cpp_source.xhtml">lru_cache.cpp</a>.</p>

<p>References <a class="el" href="unit__test_8h_source.xhtml#l00139">cputime()</a>, <a class="el" href="lru__cache_8h_source.xhtml#l00211">LRUCache&lt; Key, Data, Sizefn &gt;::insert()</a>, <a class="el" href="unit__test_8h_source.xhtml#l00158">print_cputime()</a>, and <a class="el" href="unit__test_8h_source.xhtml#l00213">unit_pass</a>.</p>
<div class="fragment"><div class="line">                                {</div>
<div class="line">        <span class="comment">// Stress test the implementation a little more using no objects</span></div>
<div class="line">        <a class="code" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">unit_lru_type2</a> *L2 = <span class="keyword">new</span> <a class="code" href="lru__cache_8cpp.xhtml#ac6438824538d155d5a47bd7b2e7228ea" title="LRUCache POD type for use in the unit tests.">unit_lru_type2</a>(5);</div>
<div class="line">        <span class="keywordtype">double</span> t0 = <a class="code" href="unit__test_8h.xhtml#a7f0155f7ecefd56c2380285420e85e05" title="Gets the current CPU time with microsecond accuracy.">cputime</a>();</div>
<div class="line">        <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i = 0; i &lt; TRANSACTIONS; i++ ) {</div>
<div class="line">                L2-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( i, i-1 );</div>
<div class="line">        }</div>
<div class="line">        <span class="keywordtype">double</span> t1 = <a class="code" href="unit__test_8h.xhtml#a7f0155f7ecefd56c2380285420e85e05" title="Gets the current CPU time with microsecond accuracy.">cputime</a>();</div>
<div class="line">        <span class="keyword">delete</span> L2;</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#a2fdd86314c7b39ab4274a36655e833f1" title="Prints to stdout the results of timing an event.">print_cputime</a>( <span class="stringliteral">&quot;(int,int) inserts&quot;</span>, t1-t0, TRANSACTIONS );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa2a4504968cf4e8abfc7b706106d4084" title="Use to end a unit test in success.">unit_pass</a>();</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="lru__cache_8cpp_a92b18aa64a57a02c1adc3d1b98924bb5_cgraph.svg" width="518" height="142"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a6288e1898f19682582c52a5005e10ada"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFINE_TEST </td>
          <td>(</td>
          <td class="paramtype">lru_cache_scope_check&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="test"><dt><b><a class="el" href="test.xhtml#_test000003">Test:</a></b></dt><dd>Check that objects inserted in a different scope are still there. </dd></dl>

<p>Definition at line <a class="el" href="lru__cache_8cpp_source.xhtml#l00143">143</a> of file <a class="el" href="lru__cache_8cpp_source.xhtml">lru_cache.cpp</a>.</p>

<p>References <a class="el" href="lru__cache_8h_source.xhtml#l00166">LRUCache&lt; Key, Data, Sizefn &gt;::fetch_ptr()</a>, <a class="el" href="lru__cache_8cpp_source.xhtml#l00045">L3</a>, <a class="el" href="unit__test_8h_source.xhtml#l00205">unit_assert</a>, and <a class="el" href="unit__test_8h_source.xhtml#l00213">unit_pass</a>.</p>
<div class="fragment"><div class="line">                                     {</div>
<div class="line">        test_big_data* B = <a class="code" href="lru__cache_8cpp.xhtml#a438505aa6f516b0b948a59d1578a9b1c" title="Scoping test object.">L3</a>-&gt;<a class="code" href="classLRUCache.xhtml#a8531c23ed890dac39debfb9f878cab9d" title="Fetches a pointer to cache data.">fetch_ptr</a>( 9 );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;scope check element L3[1]&quot;</span>, ( strncmp( B-&gt;buffer, <span class="stringliteral">&quot;9\n&quot;</span>, 1000 ) == 0 ) );</div>
<div class="line">        B = <a class="code" href="lru__cache_8cpp.xhtml#a438505aa6f516b0b948a59d1578a9b1c" title="Scoping test object.">L3</a>-&gt;<a class="code" href="classLRUCache.xhtml#a8531c23ed890dac39debfb9f878cab9d" title="Fetches a pointer to cache data.">fetch_ptr</a>( 8 );</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;scope check element L3[2]&quot;</span>, ( strncmp( B-&gt;buffer, <span class="stringliteral">&quot;8\n&quot;</span>, 1000 ) == 0 ) );</div>
<div class="line">        <span class="keyword">delete</span> <a class="code" href="lru__cache_8cpp.xhtml#a438505aa6f516b0b948a59d1578a9b1c" title="Scoping test object.">L3</a>;</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa2a4504968cf4e8abfc7b706106d4084" title="Use to end a unit test in success.">unit_pass</a>();</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="lru__cache_8cpp_a6288e1898f19682582c52a5005e10ada_cgraph.svg" width="318" height="38"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
<a class="anchor" id="a7403186cac9b12671fdda33ea88bceb0"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">DEFINE_TEST </td>
          <td>(</td>
          <td class="paramtype">lru_cache_threads&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="test"><dt><b><a class="el" href="test.xhtml#_test000004">Test:</a></b></dt><dd>Check for badness with multithreaded access, this is more of a stress test than an empirical test. </dd></dl>

<p>Definition at line <a class="el" href="lru__cache_8cpp_source.xhtml#l00170">170</a> of file <a class="el" href="lru__cache_8cpp_source.xhtml">lru_cache.cpp</a>.</p>

<p>References <a class="el" href="unit__test_8h_source.xhtml#l00139">cputime()</a>, <a class="el" href="unit__test_8h_source.xhtml#l00158">print_cputime()</a>, and <a class="el" href="unit__test_8h_source.xhtml#l00213">unit_pass</a>.</p>
<div class="fragment"><div class="line">                                 {</div>
<div class="line">        L4 = <span class="keyword">new</span> <a class="code" href="lru__cache_8cpp.xhtml#ac6438824538d155d5a47bd7b2e7228ea" title="LRUCache POD type for use in the unit tests.">unit_lru_type2</a>( 20 );</div>
<div class="line">        boost::thread_group thrds;</div>
<div class="line">        <span class="keywordtype">double</span> t0 = <a class="code" href="unit__test_8h.xhtml#a7f0155f7ecefd56c2380285420e85e05" title="Gets the current CPU time with microsecond accuracy.">cputime</a>();</div>
<div class="line">        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; THREAD_COUNT; ++i)</div>
<div class="line">                thrds.create_thread(&amp;insert_junk);</div>
<div class="line">        thrds.join_all();</div>
<div class="line">        <span class="keywordtype">double</span> t1 = <a class="code" href="unit__test_8h.xhtml#a7f0155f7ecefd56c2380285420e85e05" title="Gets the current CPU time with microsecond accuracy.">cputime</a>();</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#a2fdd86314c7b39ab4274a36655e833f1" title="Prints to stdout the results of timing an event.">print_cputime</a>( <span class="stringliteral">&quot;(int,int) multithreaded inserts&quot;</span>, t1-t0, THREAD_TRANS*THREAD_COUNT*4 );</div>
<div class="line">        <span class="keyword">delete</span> L4;</div>
<div class="line">        <a class="code" href="unit__test_8h.xhtml#aa2a4504968cf4e8abfc7b706106d4084" title="Use to end a unit test in success.">unit_pass</a>();</div>
<div class="line">}</div>
</div><!-- fragment -->
<p><div class="dynheader">
Here is the call graph for this function:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="lru__cache_8cpp_a7403186cac9b12671fdda33ea88bceb0_cgraph.svg" width="491" height="90"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
</p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="lru__cache_8cpp.xhtml">lru_cache.cpp</a></li>
    <li class="footer">Generated on Sun Jun 10 2012 22:36:56 for C++ LRU Cache Template by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1 </li>
  </ul>
</div>
</body>
</html>
