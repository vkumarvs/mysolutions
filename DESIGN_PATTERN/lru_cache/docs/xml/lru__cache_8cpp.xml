<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.1">
  <compounddef id="lru__cache_8cpp" kind="file">
    <compoundname>lru_cache.cpp</compoundname>
      <sectiondef kind="define">
      <memberdef kind="define" id="lru__cache_8cpp_1a35c428e2c3db623988f27a2d6033d7ce" prot="public" static="no">
        <name>TRANSACTIONS</name>
        <initializer>50000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="127" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lru__cache_8cpp_1ab5e1d10a838484a0c6604d983dbaf566" prot="public" static="no">
        <name>THREAD_TRANS</name>
        <initializer>20000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="155" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lru__cache_8cpp_1ae4f10e3506669382a3a5b19ce7a5eb7c" prot="public" static="no">
        <name>THREAD_COUNT</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="156" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lru__cache_8cpp_1a4b7750098474ad59a0443520f69a77c9" prot="public" static="no">
        <type><ref refid="classLRUCache" kindref="compound">LRUCache</ref>&lt; std::string, std::string &gt;</type>
        <definition>typedef LRUCache&lt;std::string,std::string&gt; unit_lru_type</definition>
        <argsstring></argsstring>
        <name>unit_lru_type</name>
        <briefdescription>
<para><ref refid="classLRUCache" kindref="compound">LRUCache</ref> type for use in the unit tests. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="19" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lru__cache_8cpp_1ac6438824538d155d5a47bd7b2e7228ea" prot="public" static="no">
        <type><ref refid="classLRUCache" kindref="compound">LRUCache</ref>&lt; int, int &gt;</type>
        <definition>typedef LRUCache&lt;int,int&gt; unit_lru_type2</definition>
        <argsstring></argsstring>
        <name>unit_lru_type2</name>
        <briefdescription>
<para><ref refid="classLRUCache" kindref="compound">LRUCache</ref> POD type for use in the unit tests. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="21" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lru__cache_8cpp_1a3d24a3719faded87a48b68c87a6064a7" prot="public" static="no">
        <type><ref refid="classLRUCache" kindref="compound">LRUCache</ref>&lt; int, test_big_data &gt;</type>
        <definition>typedef LRUCache&lt;int,test_big_data&gt; unit_lru_type3</definition>
        <argsstring></argsstring>
        <name>unit_lru_type3</name>
        <briefdescription>
<para><ref refid="classLRUCache" kindref="compound">LRUCache</ref> with large data for use in the unit tests. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="28" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lru__cache_8cpp_1a438505aa6f516b0b948a59d1578a9b1c" prot="public" static="no" mutable="no">
        <type><ref refid="lru__cache_8cpp_1a3d24a3719faded87a48b68c87a6064a7" kindref="member">unit_lru_type3</ref> *</type>
        <definition>unit_lru_type3* L3</definition>
        <argsstring></argsstring>
        <name>L3</name>
        <briefdescription>
<para>Scoping test object. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="45" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="45" bodyend="-1"/>
        <referencedby refid="lru__cache_8cpp_1a6288e1898f19682582c52a5005e10ada" compoundref="lru__cache_8cpp" startline="143" endline="150">DEFINE_TEST</referencedby>
      </memberdef>
      <memberdef kind="variable" id="lru__cache_8cpp_1a57a0848bae0ff1aa2d542184c5129a36" prot="public" static="no" mutable="no">
        <type><ref refid="lru__cache_8cpp_1ac6438824538d155d5a47bd7b2e7228ea" kindref="member">unit_lru_type2</ref> *</type>
        <definition>unit_lru_type2* L4</definition>
        <argsstring></argsstring>
        <name>L4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="158" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lru__cache_8cpp_1a8200c0bd9ad345363cb559ffd0e1e6a0" prot="public" static="no" mutable="no">
        <type></type>
        <definition>UNIT_TEST_END</definition>
        <argsstring></argsstring>
        <name>UNIT_TEST_END</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="192" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lru__cache_8cpp_1a5cc6945fc2f7ed6a7c8481972f4e172c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string dump</definition>
        <argsstring>(unit_lru_type *L)</argsstring>
        <name>dump</name>
        <param>
          <type><ref refid="lru__cache_8cpp_1a4b7750098474ad59a0443520f69a77c9" kindref="member">unit_lru_type</ref> *</type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Dumps the cache for debugging. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="31" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="31" bodyend="42"/>
        <references refid="classLRUCache_1a3ca261ee9025168c081883b6dacc4131" compoundref="lru__cache_8h" startline="238" endline="244">LRUCache&lt; Key, Data, Sizefn &gt;::get_all_keys</references>
        <references refid="classLRUCache_1a5896c9481fb649f5570fb8677c33b49c" compoundref="lru__cache_8h" startline="179" endline="188">LRUCache&lt; Key, Data, Sizefn &gt;::fetch</references>
        <referencedby refid="lru__cache_8cpp_1a744e96854fa4e01ab945ea9ad43b39ca" compoundref="lru__cache_8cpp" startline="50" endline="125">DEFINE_TEST</referencedby>
      </memberdef>
      <memberdef kind="function" id="lru__cache_8cpp_1a744e96854fa4e01ab945ea9ad43b39ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unit__test_8h_1a5f3fe0e0e85d0dc03672f96e5e95856f" kindref="member">UNIT_TEST_DEFINES</ref></type>
        <definition>UNIT_TEST_DEFINES DEFINE_TEST</definition>
        <argsstring>(lru_cache_1cycle)</argsstring>
        <name>DEFINE_TEST</name>
        <param>
          <type>lru_cache_1cycle</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="test_1_test000001"><xreftitle>Test</xreftitle><xrefdescription><para>Basic creation and desctruction test </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="50" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="50" bodyend="125"/>
        <references refid="classLRUCache_1ad59b44b509fcef46b3666695c5e4a1aa" compoundref="lru__cache_8h" startline="121" endline="126">LRUCache&lt; Key, Data, Sizefn &gt;::clear</references>
        <references refid="lru__cache_8cpp_1a5cc6945fc2f7ed6a7c8481972f4e172c" compoundref="lru__cache_8cpp" startline="31" endline="42">dump</references>
        <references refid="classLRUCache_1aa095f7527b11c4fb1bfad28bc06c91a6" compoundref="lru__cache_8h" startline="133" endline="139">LRUCache&lt; Key, Data, Sizefn &gt;::exists</references>
        <references refid="classLRUCache_1a5896c9481fb649f5570fb8677c33b49c" compoundref="lru__cache_8h" startline="179" endline="188">LRUCache&lt; Key, Data, Sizefn &gt;::fetch</references>
        <references refid="classLRUCache_1a47523c87a56e9bd718566b2659366fd1" compoundref="lru__cache_8h" startline="211" endline="233">LRUCache&lt; Key, Data, Sizefn &gt;::insert</references>
        <references refid="classLRUCache_1a3b625a8778e0dc1e5e69da3c331b9751" compoundref="lru__cache_8h" startline="118" endline="118">LRUCache&lt; Key, Data, Sizefn &gt;::max_size</references>
        <references refid="classLRUCache_1a34e974cf87c08620131a9b006443e93b" compoundref="lru__cache_8h" startline="144" endline="151">LRUCache&lt; Key, Data, Sizefn &gt;::remove</references>
        <references refid="classLRUCache_1a3a521aa7646757957a53850db90ad289" compoundref="lru__cache_8h" startline="113" endline="113">LRUCache&lt; Key, Data, Sizefn &gt;::size</references>
        <references refid="classLRUCache_1a844206e9e2fde04aaf11c638725f2c29" compoundref="lru__cache_8h" startline="156" endline="159">LRUCache&lt; Key, Data, Sizefn &gt;::touch</references>
        <references refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" compoundref="unit__test_8h" startline="205">unit_assert</references>
        <references refid="unit__test_8h_1aa2a4504968cf4e8abfc7b706106d4084" compoundref="unit__test_8h" startline="213">unit_pass</references>
      </memberdef>
      <memberdef kind="function" id="lru__cache_8cpp_1a92b18aa64a57a02c1adc3d1b98924bb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_TEST</definition>
        <argsstring>(lru_cache_stress)</argsstring>
        <name>DEFINE_TEST</name>
        <param>
          <type>lru_cache_stress</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="test_1_test000002"><xreftitle>Test</xreftitle><xrefdescription><para>Insert lots of objects and benchmark the rate. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="129" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="129" bodyend="140"/>
        <references refid="unit__test_8h_1a7f0155f7ecefd56c2380285420e85e05" compoundref="unit__test_8h" startline="139" endline="142">cputime</references>
        <references refid="classLRUCache_1a47523c87a56e9bd718566b2659366fd1" compoundref="lru__cache_8h" startline="211" endline="233">LRUCache&lt; Key, Data, Sizefn &gt;::insert</references>
        <references refid="unit__test_8h_1a2fdd86314c7b39ab4274a36655e833f1" compoundref="unit__test_8h" startline="158" endline="163">print_cputime</references>
        <references refid="unit__test_8h_1aa2a4504968cf4e8abfc7b706106d4084" compoundref="unit__test_8h" startline="213">unit_pass</references>
      </memberdef>
      <memberdef kind="function" id="lru__cache_8cpp_1a6288e1898f19682582c52a5005e10ada" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_TEST</definition>
        <argsstring>(lru_cache_scope_check)</argsstring>
        <name>DEFINE_TEST</name>
        <param>
          <type>lru_cache_scope_check</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="test_1_test000003"><xreftitle>Test</xreftitle><xrefdescription><para>Check that objects inserted in a different scope are still there. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="143" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="143" bodyend="150"/>
        <references refid="classLRUCache_1a8531c23ed890dac39debfb9f878cab9d" compoundref="lru__cache_8h" startline="166" endline="172">LRUCache&lt; Key, Data, Sizefn &gt;::fetch_ptr</references>
        <references refid="lru__cache_8cpp_1a438505aa6f516b0b948a59d1578a9b1c" compoundref="lru__cache_8cpp" startline="45">L3</references>
        <references refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" compoundref="unit__test_8h" startline="205">unit_assert</references>
        <references refid="unit__test_8h_1aa2a4504968cf4e8abfc7b706106d4084" compoundref="unit__test_8h" startline="213">unit_pass</references>
      </memberdef>
      <memberdef kind="function" id="lru__cache_8cpp_1a1e6e881dc902d9cae12d50ccf182d638" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void insert_junk</definition>
        <argsstring>()</argsstring>
        <name>insert_junk</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="160" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="160" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="lru__cache_8cpp_1a7403186cac9b12671fdda33ea88bceb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_TEST</definition>
        <argsstring>(lru_cache_threads)</argsstring>
        <name>DEFINE_TEST</name>
        <param>
          <type>lru_cache_threads</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="test_1_test000004"><xreftitle>Test</xreftitle><xrefdescription><para>Check for badness with multithreaded access, this is more of a stress test than an empirical test. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="170" bodyfile="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" bodystart="170" bodyend="181"/>
        <references refid="unit__test_8h_1a7f0155f7ecefd56c2380285420e85e05" compoundref="unit__test_8h" startline="139" endline="142">cputime</references>
        <references refid="unit__test_8h_1a2fdd86314c7b39ab4274a36655e833f1" compoundref="unit__test_8h" startline="158" endline="163">print_cputime</references>
        <references refid="unit__test_8h_1aa2a4504968cf4e8abfc7b706106d4084" compoundref="unit__test_8h" startline="213">unit_pass</references>
      </memberdef>
      <memberdef kind="function" id="lru__cache_8cpp_1aff839d268e358d4e7f1110d64f04a333" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>UNIT_TEST_RUN</definition>
        <argsstring>(&quot;LRU Cache&quot;)</argsstring>
        <name>UNIT_TEST_RUN</name>
        <param>
          <type>&quot;LRU Cache&quot;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="185"/>
      </memberdef>
      <memberdef kind="function" id="lru__cache_8cpp_1ab8d8ef29352f3cca95b8498e8f1f794b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ADD_TEST</definition>
        <argsstring>(lru_cache_1cycle)</argsstring>
        <name>ADD_TEST</name>
        <param>
          <type>lru_cache_1cycle</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="186"/>
      </memberdef>
      <memberdef kind="function" id="lru__cache_8cpp_1a03467e81acd25093eb20b75348ff10d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ADD_TEST</definition>
        <argsstring>(lru_cache_stress)</argsstring>
        <name>ADD_TEST</name>
        <param>
          <type>lru_cache_stress</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="187"/>
      </memberdef>
      <memberdef kind="function" id="lru__cache_8cpp_1ad55d7ef5e634df1ce5aa79f2d79f5b5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ADD_TEST</definition>
        <argsstring>(lru_cache_scope_check)</argsstring>
        <name>ADD_TEST</name>
        <param>
          <type>lru_cache_scope_check</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="188"/>
      </memberdef>
      <memberdef kind="function" id="lru__cache_8cpp_1a2d5d90f7f44461e4943d8d1afe37e882" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ADD_TEST</definition>
        <argsstring>(lru_cache_threads)</argsstring>
        <name>ADD_TEST</name>
        <param>
          <type>lru_cache_threads</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp" line="190"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Template cache with an LRU removal policy (unit tests) <simplesect kind="author"><para>Patrick Audley </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2004-2011<sp/>by<sp/>Patrick<sp/>Audley<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/>paudley@blackcat.ca<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://patrickaudley.com<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>***************************************************************************/</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lru__cache_8h" kindref="compound">lru_cache.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNITTEST</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="unit__test_8h" kindref="compound">unit_test.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="lru__cache_8cpp_1a4b7750098474ad59a0443520f69a77c9" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classLRUCache" kindref="compound" tooltip="Template cache with an LRU removal policy.">LRUCache&lt;std::string,std::string&gt;</ref><sp/><ref refid="lru__cache_8cpp_1a4b7750098474ad59a0443520f69a77c9" kindref="member" tooltip="LRUCache type for use in the unit tests.">unit_lru_type</ref>;</highlight></codeline>
<codeline lineno="21" refid="lru__cache_8cpp_1ac6438824538d155d5a47bd7b2e7228ea" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classLRUCache" kindref="compound" tooltip="Template cache with an LRU removal policy.">LRUCache&lt;int,int&gt;</ref><sp/><ref refid="lru__cache_8cpp_1ac6438824538d155d5a47bd7b2e7228ea" kindref="member" tooltip="LRUCache POD type for use in the unit tests.">unit_lru_type2</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="keyword">class<sp/></highlight><highlight class="normal">test_big_data<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buffer[1000];</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="28" refid="lru__cache_8cpp_1a3d24a3719faded87a48b68c87a6064a7" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classLRUCache" kindref="compound" tooltip="Template cache with an LRU removal policy.">LRUCache&lt;int,test_big_data&gt;</ref><sp/><ref refid="lru__cache_8cpp_1a3d24a3719faded87a48b68c87a6064a7" kindref="member" tooltip="LRUCache with large data for use in the unit tests.">unit_lru_type3</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="lru__cache_8cpp_1a5cc6945fc2f7ed6a7c8481972f4e172c" refkind="member"><highlight class="normal">std::string<sp/><ref refid="lru__cache_8cpp_1a5cc6945fc2f7ed6a7c8481972f4e172c" kindref="member" tooltip="Dumps the cache for debugging.">dump</ref>(<sp/><ref refid="classLRUCache" kindref="compound" tooltip="Template cache with an LRU removal policy.">unit_lru_type</ref><sp/>*L<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classLRUCache_1aaa32d864b92c5bb8df559b363a69cf21" kindref="member" tooltip="List of keys.">unit_lru_type::Key_List</ref><sp/>_list(<sp/>L-&gt;<ref refid="classLRUCache_1a3ca261ee9025168c081883b6dacc4131" kindref="member" tooltip="Get a list of keys.">get_all_keys</ref>()<sp/>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>ret(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="classLRUCache_1a2504cf65d69d046d4010a4102e2c17c8" kindref="member" tooltip="Main cache iterator.">unit_lru_type::Key_List_Iter</ref><sp/>liter<sp/>=<sp/>_list.begin();<sp/>liter<sp/>!=<sp/>_list.end();<sp/>liter++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.append(<sp/>*liter<sp/>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.append(<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.append(<sp/>L-&gt;<ref refid="classLRUCache_1a5896c9481fb649f5570fb8677c33b49c" kindref="member" tooltip="Fetches a copy of cached data.">fetch</ref>(<sp/>*liter,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret.append(<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Dump--&quot;<sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>ret<sp/>&lt;&lt;<sp/>&quot;----&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="lru__cache_8cpp_1a438505aa6f516b0b948a59d1578a9b1c" refkind="member"><highlight class="normal"><ref refid="classLRUCache" kindref="compound" tooltip="Template cache with an LRU removal policy.">unit_lru_type3</ref>*<sp/><ref refid="lru__cache_8cpp_1a438505aa6f516b0b948a59d1578a9b1c" kindref="member" tooltip="Scoping test object.">L3</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="unit__test_8h_1a5f3fe0e0e85d0dc03672f96e5e95856f" kindref="member" tooltip="Start of inline Unit Test definitions Use this to start the list of unit tests. This should be follow...">UNIT_TEST_DEFINES</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="lru__cache_8cpp_1a744e96854fa4e01ab945ea9ad43b39ca" refkind="member"><highlight class="normal"><ref refid="unit__test_8h_1ad3bccea4c3142d58fd5510f65503b300" kindref="member" tooltip="Start a new test definition.">DEFINE_TEST</ref>(<sp/>lru_cache_1cycle<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>unit_data_1cycle_a(</highlight><highlight class="stringliteral">&quot;foo:4\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>unit_data_1cycle_b(</highlight><highlight class="stringliteral">&quot;bar:flower\nfoo:4\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>unit_data_1cycle_c(</highlight><highlight class="stringliteral">&quot;foo:4\nbar:flower\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>unit_data_1cycle_d(</highlight><highlight class="stringliteral">&quot;foo:moose\nbaz:Stalin\nbar:flower\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>unit_data_1cycle_e(</highlight><highlight class="stringliteral">&quot;foo:moose\nbar:flower\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>unit_data_1cycle_f(</highlight><highlight class="stringliteral">&quot;quz:xyzzy\nbaz:monkey\nfoo:moose\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>unit_data_1cycle_g(</highlight><highlight class="stringliteral">&quot;coat:mouse\npants:cat\nsocks:bear\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classLRUCache" kindref="compound" tooltip="Template cache with an LRU removal policy.">unit_lru_type</ref><sp/>*L<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="lru__cache_8cpp_1a4b7750098474ad59a0443520f69a77c9" kindref="member" tooltip="LRUCache type for use in the unit tests.">unit_lru_type</ref>(3);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;size==0&quot;</highlight><highlight class="normal">,<sp/>(L-&gt;<ref refid="classLRUCache_1a3a521aa7646757957a53850db90ad289" kindref="member" tooltip="Gets the current abstract size of the cache.">size</ref>()<sp/>==<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;maxsize==3&quot;</highlight><highlight class="normal">,<sp/>(L-&gt;<ref refid="classLRUCache_1a3b625a8778e0dc1e5e69da3c331b9751" kindref="member" tooltip="Gets the maximum sbstract size of the cache.">max_size</ref>()<sp/>==<sp/>3)<sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Checking<sp/>a<sp/>bogus<sp/>key<sp/>shouldn&apos;t<sp/>alter<sp/>the<sp/>cache.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L-&gt;<ref refid="classLRUCache_1aa095f7527b11c4fb1bfad28bc06c91a6" kindref="member" tooltip="Checks for the existance of a key in the cache.">exists</ref>(<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;exists()<sp/>doesn&apos;t<sp/>increase<sp/>size&quot;</highlight><highlight class="normal">,<sp/>(L-&gt;<ref refid="classLRUCache_1a3a521aa7646757957a53850db90ad289" kindref="member" tooltip="Gets the current abstract size of the cache.">size</ref>()<sp/>==<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>insert()<sp/>and<sp/>exists()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L-&gt;<ref refid="classLRUCache_1a47523c87a56e9bd718566b2659366fd1" kindref="member" tooltip="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;4&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;size==1<sp/>after<sp/>insert(foo,4)&quot;</highlight><highlight class="normal">,<sp/>(L-&gt;<ref refid="classLRUCache_1a3a521aa7646757957a53850db90ad289" kindref="member" tooltip="Gets the current abstract size of the cache.">size</ref>()<sp/>==<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;check<sp/>exists(foo)&quot;</highlight><highlight class="normal">,<sp/>L-&gt;<ref refid="classLRUCache_1aa095f7527b11c4fb1bfad28bc06c91a6" kindref="member" tooltip="Checks for the existance of a key in the cache.">exists</ref>(<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;contents<sp/>check<sp/>a)&quot;</highlight><highlight class="normal">,<sp/>unit_data_1cycle_a.compare(<sp/><ref refid="lru__cache_8cpp_1a5cc6945fc2f7ed6a7c8481972f4e172c" kindref="member" tooltip="Dumps the cache for debugging.">dump</ref>(<sp/>L<sp/>)<sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>second<sp/>insert<sp/>and<sp/>ordering</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L-&gt;<ref refid="classLRUCache_1a47523c87a56e9bd718566b2659366fd1" kindref="member" tooltip="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;flower&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;size==2<sp/>after<sp/>insert(bar,flower)&quot;</highlight><highlight class="normal">,<sp/>(L-&gt;<ref refid="classLRUCache_1a3a521aa7646757957a53850db90ad289" kindref="member" tooltip="Gets the current abstract size of the cache.">size</ref>()<sp/>==<sp/>2)<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;contents<sp/>check<sp/>b)&quot;</highlight><highlight class="normal">,<sp/>unit_data_1cycle_b.compare(<sp/><ref refid="lru__cache_8cpp_1a5cc6945fc2f7ed6a7c8481972f4e172c" kindref="member" tooltip="Dumps the cache for debugging.">dump</ref>(<sp/>L<sp/>)<sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>touching</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L-&gt;<ref refid="classLRUCache_1a844206e9e2fde04aaf11c638725f2c29" kindref="member" tooltip="Touches a key in the Cache and makes it the most recently used.">touch</ref>(<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;contents<sp/>check<sp/>c)&quot;</highlight><highlight class="normal">,<sp/>unit_data_1cycle_c.compare(<sp/><ref refid="lru__cache_8cpp_1a5cc6945fc2f7ed6a7c8481972f4e172c" kindref="member" tooltip="Dumps the cache for debugging.">dump</ref>(<sp/>L<sp/>)<sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>of<sp/>an<sp/>existing<sp/>element<sp/>should<sp/>result<sp/>in<sp/>only<sp/>a<sp/>touch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L-&gt;<ref refid="classLRUCache_1a47523c87a56e9bd718566b2659366fd1" kindref="member" tooltip="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;flower&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;verify<sp/>insert<sp/>touches&quot;</highlight><highlight class="normal">,<sp/>unit_data_1cycle_b.compare(<sp/><ref refid="lru__cache_8cpp_1a5cc6945fc2f7ed6a7c8481972f4e172c" kindref="member" tooltip="Dumps the cache for debugging.">dump</ref>(<sp/>L<sp/>)<sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Verify<sp/>that<sp/>fetch<sp/>works</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;verify<sp/>fetch(bar)&quot;</highlight><highlight class="normal">,<sp/>(<sp/>std::string(</highlight><highlight class="stringliteral">&quot;flower&quot;</highlight><highlight class="normal">).compare(<sp/>L-&gt;<ref refid="classLRUCache_1a5896c9481fb649f5570fb8677c33b49c" kindref="member" tooltip="Fetches a copy of cached data.">fetch</ref>(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">)<sp/>)<sp/>==<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>of<sp/>an<sp/>existing<sp/>element<sp/>with<sp/>new<sp/>data<sp/>should<sp/>replace<sp/>and<sp/>touch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L-&gt;<ref refid="classLRUCache_1a47523c87a56e9bd718566b2659366fd1" kindref="member" tooltip="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;baz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Stalin&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L-&gt;<ref refid="classLRUCache_1a47523c87a56e9bd718566b2659366fd1" kindref="member" tooltip="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;moose&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;verify<sp/>insert<sp/>replaces&quot;</highlight><highlight class="normal">,<sp/>unit_data_1cycle_d.compare(<sp/><ref refid="lru__cache_8cpp_1a5cc6945fc2f7ed6a7c8481972f4e172c" kindref="member" tooltip="Dumps the cache for debugging.">dump</ref>(<sp/>L<sp/>)<sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>removal<sp/>of<sp/>an<sp/>existing<sp/>member.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L-&gt;<ref refid="classLRUCache_1a34e974cf87c08620131a9b006443e93b" kindref="member" tooltip="Removes a key-data pair from the cache.">remove</ref>(<sp/></highlight><highlight class="stringliteral">&quot;baz&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;verify<sp/>remove<sp/>works&quot;</highlight><highlight class="normal">,<sp/>unit_data_1cycle_e.compare(<sp/><ref refid="lru__cache_8cpp_1a5cc6945fc2f7ed6a7c8481972f4e172c" kindref="member" tooltip="Dumps the cache for debugging.">dump</ref>(<sp/>L<sp/>)<sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>LRU<sp/>removal<sp/>as<sp/>we<sp/>add<sp/>more<sp/>members<sp/>than<sp/>max_size()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L-&gt;<ref refid="classLRUCache_1a47523c87a56e9bd718566b2659366fd1" kindref="member" tooltip="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;baz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;monkey&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L-&gt;<ref refid="classLRUCache_1a47523c87a56e9bd718566b2659366fd1" kindref="member" tooltip="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;quz&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;xyzzy&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;verify<sp/>LRU<sp/>semantics&quot;</highlight><highlight class="normal">,<sp/>unit_data_1cycle_f.compare(<sp/><ref refid="lru__cache_8cpp_1a5cc6945fc2f7ed6a7c8481972f4e172c" kindref="member" tooltip="Dumps the cache for debugging.">dump</ref>(<sp/>L<sp/>)<sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stress<sp/>test<sp/>the<sp/>implementation<sp/>a<sp/>little..</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*names[10]<sp/>=<sp/>{<sp/></highlight><highlight class="stringliteral">&quot;moose&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;dog&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;bear&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;cat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mouse&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;hat&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;mittens&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;socks&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pants&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;coat&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>50;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L-&gt;<ref refid="classLRUCache_1a47523c87a56e9bd718566b2659366fd1" kindref="member" tooltip="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</ref>(<sp/>names[<sp/>i<sp/>%<sp/>10<sp/>],<sp/>names[<sp/>i<sp/>%<sp/>9<sp/>]<sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;stress<sp/>test<sp/>a<sp/>little&quot;</highlight><highlight class="normal">,<sp/>unit_data_1cycle_g.compare(<sp/><ref refid="lru__cache_8cpp_1a5cc6945fc2f7ed6a7c8481972f4e172c" kindref="member" tooltip="Dumps the cache for debugging.">dump</ref>(<sp/>L<sp/>)<sp/>)<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>little<sp/>for<sp/>the<sp/>third<sp/>test<sp/>which<sp/>verifies<sp/>that<sp/>scoped<sp/>references<sp/>inserted<sp/>into<sp/>the<sp/>cache<sp/>don&apos;t<sp/>disappear.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L3<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="lru__cache_8cpp_1a3d24a3719faded87a48b68c87a6064a7" kindref="member" tooltip="LRUCache with large data for use in the unit tests.">unit_lru_type3</ref>(2);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>10;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_big_data<sp/>B;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snprintf(<sp/>B.buffer,<sp/>1000,<sp/></highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L3-&gt;insert(<sp/>i,<sp/>B<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>that<sp/>clear<sp/>fully<sp/>clears.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Bug<sp/>discovered<sp/>by:<sp/><sp/>月迷津渡<sp/>gdcex@qq.com</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;very<sp/>size<sp/>before<sp/>clear.&quot;</highlight><highlight class="normal">,<sp/>(L-&gt;<ref refid="classLRUCache_1a3a521aa7646757957a53850db90ad289" kindref="member" tooltip="Gets the current abstract size of the cache.">size</ref>()<sp/>&gt;<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L-&gt;<ref refid="classLRUCache_1ad59b44b509fcef46b3666695c5e4a1aa" kindref="member" tooltip="Clears all storage and indices.">clear</ref>();</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;very<sp/>size<sp/>after<sp/>clear.&quot;</highlight><highlight class="normal">,<sp/>(L-&gt;<ref refid="classLRUCache_1a3a521aa7646757957a53850db90ad289" kindref="member" tooltip="Gets the current abstract size of the cache.">size</ref>()<sp/>==<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa2a4504968cf4e8abfc7b706106d4084" kindref="member" tooltip="Use to end a unit test in success.">unit_pass</ref>();</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRANSACTIONS<sp/>50000</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="129" refid="lru__cache_8cpp_1a92b18aa64a57a02c1adc3d1b98924bb5" refkind="member"><highlight class="normal"><ref refid="unit__test_8h_1ad3bccea4c3142d58fd5510f65503b300" kindref="member" tooltip="Start a new test definition.">DEFINE_TEST</ref>(<sp/>lru_cache_stress<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stress<sp/>test<sp/>the<sp/>implementation<sp/>a<sp/>little<sp/>more<sp/>using<sp/>no<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classLRUCache" kindref="compound" tooltip="Template cache with an LRU removal policy.">unit_lru_type2</ref><sp/>*L2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="lru__cache_8cpp_1ac6438824538d155d5a47bd7b2e7228ea" kindref="member" tooltip="LRUCache POD type for use in the unit tests.">unit_lru_type2</ref>(5);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/><ref refid="unit__test_8h_1a7f0155f7ecefd56c2380285420e85e05" kindref="member" tooltip="Gets the current CPU time with microsecond accuracy.">cputime</ref>();</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>TRANSACTIONS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L2-&gt;<ref refid="classLRUCache_1a47523c87a56e9bd718566b2659366fd1" kindref="member" tooltip="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</ref>(<sp/>i,<sp/>i-1<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/><ref refid="unit__test_8h_1a7f0155f7ecefd56c2380285420e85e05" kindref="member" tooltip="Gets the current CPU time with microsecond accuracy.">cputime</ref>();</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>L2;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1a2fdd86314c7b39ab4274a36655e833f1" kindref="member" tooltip="Prints to stdout the results of timing an event.">print_cputime</ref>(<sp/></highlight><highlight class="stringliteral">&quot;(int,int)<sp/>inserts&quot;</highlight><highlight class="normal">,<sp/>t1-t0,<sp/>TRANSACTIONS<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa2a4504968cf4e8abfc7b706106d4084" kindref="member" tooltip="Use to end a unit test in success.">unit_pass</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="lru__cache_8cpp_1a6288e1898f19682582c52a5005e10ada" refkind="member"><highlight class="normal"><ref refid="unit__test_8h_1ad3bccea4c3142d58fd5510f65503b300" kindref="member" tooltip="Start a new test definition.">DEFINE_TEST</ref>(<sp/>lru_cache_scope_check<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_big_data*<sp/>B<sp/>=<sp/>L3-&gt;<ref refid="classLRUCache_1a8531c23ed890dac39debfb9f878cab9d" kindref="member" tooltip="Fetches a pointer to cache data.">fetch_ptr</ref>(<sp/>9<sp/>);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;scope<sp/>check<sp/>element<sp/>L3[1]&quot;</highlight><highlight class="normal">,<sp/>(<sp/>strncmp(<sp/>B-&gt;buffer,<sp/></highlight><highlight class="stringliteral">&quot;9\n&quot;</highlight><highlight class="normal">,<sp/>1000<sp/>)<sp/>==<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>B<sp/>=<sp/>L3-&gt;<ref refid="classLRUCache_1a8531c23ed890dac39debfb9f878cab9d" kindref="member" tooltip="Fetches a pointer to cache data.">fetch_ptr</ref>(<sp/>8<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa37d553e7d644c165c888bed8908de20" kindref="member" tooltip="Use within a Unit Test to verify a condition.">unit_assert</ref>(<sp/></highlight><highlight class="stringliteral">&quot;scope<sp/>check<sp/>element<sp/>L3[2]&quot;</highlight><highlight class="normal">,<sp/>(<sp/>strncmp(<sp/>B-&gt;buffer,<sp/></highlight><highlight class="stringliteral">&quot;8\n&quot;</highlight><highlight class="normal">,<sp/>1000<sp/>)<sp/>==<sp/>0<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="lru__cache_8cpp_1a438505aa6f516b0b948a59d1578a9b1c" kindref="member" tooltip="Scoping test object.">L3</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa2a4504968cf4e8abfc7b706106d4084" kindref="member" tooltip="Use to end a unit test in success.">unit_pass</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_REENTRANT</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/thread/thread.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>THREAD_TRANS<sp/>20000</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>THREAD_COUNT<sp/>10</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><ref refid="classLRUCache" kindref="compound" tooltip="Template cache with an LRU removal policy.">unit_lru_type2</ref><sp/>*L4;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insert_junk(){</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>THREAD_TRANS;<sp/>i++<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L4-&gt;<ref refid="classLRUCache_1a47523c87a56e9bd718566b2659366fd1" kindref="member" tooltip="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</ref>(<sp/>i,<sp/>i+1<sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L4-&gt;<ref refid="classLRUCache_1a34e974cf87c08620131a9b006443e93b" kindref="member" tooltip="Removes a key-data pair from the cache.">remove</ref>(<sp/>i-5<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L4-&gt;<ref refid="classLRUCache_1a5896c9481fb649f5570fb8677c33b49c" kindref="member" tooltip="Fetches a copy of cached data.">fetch</ref>(<sp/>i-3<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L4-&gt;<ref refid="classLRUCache_1a844206e9e2fde04aaf11c638725f2c29" kindref="member" tooltip="Touches a key in the Cache and makes it the most recently used.">touch</ref>(<sp/>i-10<sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="170" refid="lru__cache_8cpp_1a7403186cac9b12671fdda33ea88bceb0" refkind="member"><highlight class="normal"><ref refid="unit__test_8h_1ad3bccea4c3142d58fd5510f65503b300" kindref="member" tooltip="Start a new test definition.">DEFINE_TEST</ref>(<sp/>lru_cache_threads<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L4<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="lru__cache_8cpp_1ac6438824538d155d5a47bd7b2e7228ea" kindref="member" tooltip="LRUCache POD type for use in the unit tests.">unit_lru_type2</ref>(<sp/>20<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boost::thread_group<sp/>thrds;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/><ref refid="unit__test_8h_1a7f0155f7ecefd56c2380285420e85e05" kindref="member" tooltip="Gets the current CPU time with microsecond accuracy.">cputime</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>THREAD_COUNT;<sp/>++i)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrds.create_thread(&amp;insert_junk);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thrds.join_all();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/><ref refid="unit__test_8h_1a7f0155f7ecefd56c2380285420e85e05" kindref="member" tooltip="Gets the current CPU time with microsecond accuracy.">cputime</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1a2fdd86314c7b39ab4274a36655e833f1" kindref="member" tooltip="Prints to stdout the results of timing an event.">print_cputime</ref>(<sp/></highlight><highlight class="stringliteral">&quot;(int,int)<sp/>multithreaded<sp/>inserts&quot;</highlight><highlight class="normal">,<sp/>t1-t0,<sp/>THREAD_TRANS*THREAD_COUNT*4<sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>L4;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1aa2a4504968cf4e8abfc7b706106d4084" kindref="member" tooltip="Use to end a unit test in success.">unit_pass</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><ref refid="unit__test_8h_1a86b577b8af9cc6df174dc0e2e292c365" kindref="member" tooltip="Start a Unit test run section.">UNIT_TEST_RUN</ref>(<sp/></highlight><highlight class="stringliteral">&quot;LRU<sp/>Cache&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1a758baec4c57fa6aeaf800e2c631a7d9f" kindref="member" tooltip="Adds a defined test to test run.">ADD_TEST</ref>(<sp/>lru_cache_1cycle<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1a758baec4c57fa6aeaf800e2c631a7d9f" kindref="member" tooltip="Adds a defined test to test run.">ADD_TEST</ref>(<sp/>lru_cache_stress<sp/>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1a758baec4c57fa6aeaf800e2c631a7d9f" kindref="member" tooltip="Adds a defined test to test run.">ADD_TEST</ref>(<sp/>lru_cache_scope_check<sp/>);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_REENTRANT</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unit__test_8h_1a758baec4c57fa6aeaf800e2c631a7d9f" kindref="member" tooltip="Adds a defined test to test run.">ADD_TEST</ref>(<sp/>lru_cache_threads<sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="192"><highlight class="preprocessor"></highlight><highlight class="normal"><ref refid="unit__test_8h_1a732dd1ba2cfc9163d60e05628b4544dc" kindref="member" tooltip="Finish a Unit Test run section.">UNIT_TEST_END</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/paudley/Sites/dist/lru_cache/src/lru_cache.cpp"/>
  </compounddef>
</doxygen>
