<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>C++ LRU Cache Template: lru_cache.cpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">C++ LRU Cache Template
   &#160;<span id="projectnumber">1.4</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('lru__cache_8cpp.xhtml','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">lru_cache.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="lru__cache_8cpp.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/***************************************************************************</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *   Copyright (C) 2004-2011 by Patrick Audley                             *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *   paudley@blackcat.ca                                                   *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *   http://patrickaudley.com                                              *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *                                                                         *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> ***************************************************************************/</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="lru__cache_8h.xhtml">lru_cache.h</a>&quot;</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#ifdef UNITTEST</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &quot;<a class="code" href="unit__test_8h.xhtml">unit_test.h</a>&quot;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;stdlib.h&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="code" href="lru__cache_8cpp.xhtml#a4b7750098474ad59a0443520f69a77c9">   19</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">LRUCache&lt;std::string,std::string&gt;</a> <a class="code" href="lru__cache_8cpp.xhtml#a4b7750098474ad59a0443520f69a77c9" title="LRUCache type for use in the unit tests.">unit_lru_type</a>;</div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="code" href="lru__cache_8cpp.xhtml#ac6438824538d155d5a47bd7b2e7228ea">   21</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">LRUCache&lt;int,int&gt;</a> <a class="code" href="lru__cache_8cpp.xhtml#ac6438824538d155d5a47bd7b2e7228ea" title="LRUCache POD type for use in the unit tests.">unit_lru_type2</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">class </span>test_big_data {</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;        <span class="keyword">public</span>:</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;                <span class="keywordtype">char</span> buffer[1000];</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;};</div>
<div class="line"><a name="l00028"></a><span class="lineno"><a class="code" href="lru__cache_8cpp.xhtml#a3d24a3719faded87a48b68c87a6064a7">   28</a></span>&#160;<span class="keyword">typedef</span> <a class="code" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">LRUCache&lt;int,test_big_data&gt;</a> <a class="code" href="lru__cache_8cpp.xhtml#a3d24a3719faded87a48b68c87a6064a7" title="LRUCache with large data for use in the unit tests.">unit_lru_type3</a>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;</div>
<div class="line"><a name="l00031"></a><span class="lineno"><a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c">   31</a></span>&#160;std::string <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( <a class="code" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">unit_lru_type</a> *L ) {</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;        <a class="code" href="classLRUCache.xhtml#aaa32d864b92c5bb8df559b363a69cf21" title="List of keys.">unit_lru_type::Key_List</a> _list( L-&gt;<a class="code" href="classLRUCache.xhtml#a3ca261ee9025168c081883b6dacc4131" title="Get a list of keys.">get_all_keys</a>() );</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;        std::string ret(<span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;        <span class="keywordflow">for</span>( <a class="code" href="classLRUCache.xhtml#a2504cf65d69d046d4010a4102e2c17c8" title="Main cache iterator.">unit_lru_type::Key_List_Iter</a> liter = _list.begin(); liter != _list.end(); liter++ ) {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;                ret.append( *liter );</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;                ret.append( <span class="stringliteral">&quot;:&quot;</span> );</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                ret.append( L-&gt;<a class="code" href="classLRUCache.xhtml#a5896c9481fb649f5570fb8677c33b49c" title="Fetches a copy of cached data.">fetch</a>( *liter, <span class="keyword">false</span> ) );</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;                ret.append( <span class="stringliteral">&quot;\n&quot;</span> );</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        }</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;        <span class="comment">//std::cout &lt;&lt; &quot;Dump--&quot; &lt;&lt; std::endl &lt;&lt; ret &lt;&lt; &quot;----&quot; &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;        <span class="keywordflow">return</span> ret;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;}</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="code" href="lru__cache_8cpp.xhtml#a438505aa6f516b0b948a59d1578a9b1c">   45</a></span>&#160;<a class="code" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">unit_lru_type3</a>* <a class="code" href="lru__cache_8cpp.xhtml#a438505aa6f516b0b948a59d1578a9b1c" title="Scoping test object.">L3</a>;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<a class="code" href="unit__test_8h.xhtml#a5f3fe0e0e85d0dc03672f96e5e95856f" title="Start of inline Unit Test definitions Use this to start the list of unit tests. This should be follow...">UNIT_TEST_DEFINES</a></div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;</div>
<div class="line"><a name="l00050"></a><span class="lineno"><a class="code" href="lru__cache_8cpp.xhtml#a744e96854fa4e01ab945ea9ad43b39ca">   50</a></span>&#160;<a class="code" href="unit__test_8h.xhtml#ad3bccea4c3142d58fd5510f65503b300" title="Start a new test definition.">DEFINE_TEST</a>( lru_cache_1cycle ) {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;        <span class="keyword">const</span> std::string unit_data_1cycle_a(<span class="stringliteral">&quot;foo:4\n&quot;</span>);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;        <span class="keyword">const</span> std::string unit_data_1cycle_b(<span class="stringliteral">&quot;bar:flower\nfoo:4\n&quot;</span>);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;        <span class="keyword">const</span> std::string unit_data_1cycle_c(<span class="stringliteral">&quot;foo:4\nbar:flower\n&quot;</span>);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;        <span class="keyword">const</span> std::string unit_data_1cycle_d(<span class="stringliteral">&quot;foo:moose\nbaz:Stalin\nbar:flower\n&quot;</span>);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        <span class="keyword">const</span> std::string unit_data_1cycle_e(<span class="stringliteral">&quot;foo:moose\nbar:flower\n&quot;</span>);</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        <span class="keyword">const</span> std::string unit_data_1cycle_f(<span class="stringliteral">&quot;quz:xyzzy\nbaz:monkey\nfoo:moose\n&quot;</span>);</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;        <span class="keyword">const</span> std::string unit_data_1cycle_g(<span class="stringliteral">&quot;coat:mouse\npants:cat\nsocks:bear\n&quot;</span>);</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;        <a class="code" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">unit_lru_type</a> *L = <span class="keyword">new</span> <a class="code" href="lru__cache_8cpp.xhtml#a4b7750098474ad59a0443520f69a77c9" title="LRUCache type for use in the unit tests.">unit_lru_type</a>(3);</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;size==0&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3a521aa7646757957a53850db90ad289" title="Gets the current abstract size of the cache.">size</a>() == 0) );</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;maxsize==3&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3b625a8778e0dc1e5e69da3c331b9751" title="Gets the maximum sbstract size of the cache.">max_size</a>() == 3) );</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;        <span class="comment">// Checking a bogus key shouldn&#39;t alter the cache.</span></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;        L-&gt;<a class="code" href="classLRUCache.xhtml#aa095f7527b11c4fb1bfad28bc06c91a6" title="Checks for the existance of a key in the cache.">exists</a>( <span class="stringliteral">&quot;foo&quot;</span> );</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;exists() doesn&#39;t increase size&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3a521aa7646757957a53850db90ad289" title="Gets the current abstract size of the cache.">size</a>() == 0) );</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;        <span class="comment">// Check insert() and exists()</span></div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;foo&quot;</span>, <span class="stringliteral">&quot;4&quot;</span> );</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;size==1 after insert(foo,4)&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3a521aa7646757957a53850db90ad289" title="Gets the current abstract size of the cache.">size</a>() == 1) );</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;check exists(foo)&quot;</span>, L-&gt;<a class="code" href="classLRUCache.xhtml#aa095f7527b11c4fb1bfad28bc06c91a6" title="Checks for the existance of a key in the cache.">exists</a>( <span class="stringliteral">&quot;foo&quot;</span> ) );</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;contents check a)&quot;</span>, unit_data_1cycle_a.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;        <span class="comment">// Check second insert and ordering</span></div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;bar&quot;</span>, <span class="stringliteral">&quot;flower&quot;</span> );</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;size==2 after insert(bar,flower)&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3a521aa7646757957a53850db90ad289" title="Gets the current abstract size of the cache.">size</a>() == 2) );</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;contents check b)&quot;</span>, unit_data_1cycle_b.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;        <span class="comment">// Check touching</span></div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;        L-&gt;<a class="code" href="classLRUCache.xhtml#a844206e9e2fde04aaf11c638725f2c29" title="Touches a key in the Cache and makes it the most recently used.">touch</a>( <span class="stringliteral">&quot;foo&quot;</span> );</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;contents check c)&quot;</span>, unit_data_1cycle_c.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;        <span class="comment">// Insert of an existing element should result in only a touch</span></div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;bar&quot;</span>, <span class="stringliteral">&quot;flower&quot;</span> );</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;verify insert touches&quot;</span>, unit_data_1cycle_b.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;        <span class="comment">// Verify that fetch works</span></div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;verify fetch(bar)&quot;</span>, ( std::string(<span class="stringliteral">&quot;flower&quot;</span>).compare( L-&gt;<a class="code" href="classLRUCache.xhtml#a5896c9481fb649f5570fb8677c33b49c" title="Fetches a copy of cached data.">fetch</a>(<span class="stringliteral">&quot;bar&quot;</span>) ) == 0 ) );</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;        <span class="comment">// Insert of an existing element with new data should replace and touch</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;baz&quot;</span>, <span class="stringliteral">&quot;Stalin&quot;</span> );</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;foo&quot;</span>, <span class="stringliteral">&quot;moose&quot;</span> );</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;verify insert replaces&quot;</span>, unit_data_1cycle_d.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;        <span class="comment">// Test removal of an existing member.</span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;        L-&gt;<a class="code" href="classLRUCache.xhtml#a34e974cf87c08620131a9b006443e93b" title="Removes a key-data pair from the cache.">remove</a>( <span class="stringliteral">&quot;baz&quot;</span> );</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;verify remove works&quot;</span>, unit_data_1cycle_e.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;        <span class="comment">// Test LRU removal as we add more members than max_size()</span></div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;baz&quot;</span>, <span class="stringliteral">&quot;monkey&quot;</span> );</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;        L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( <span class="stringliteral">&quot;quz&quot;</span>, <span class="stringliteral">&quot;xyzzy&quot;</span> );</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;verify LRU semantics&quot;</span>, unit_data_1cycle_f.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;        <span class="comment">// Stress test the implementation a little..</span></div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;        <span class="keyword">const</span> <span class="keywordtype">char</span> *names[10] = { <span class="stringliteral">&quot;moose&quot;</span>, <span class="stringliteral">&quot;dog&quot;</span>, <span class="stringliteral">&quot;bear&quot;</span>, <span class="stringliteral">&quot;cat&quot;</span>, <span class="stringliteral">&quot;mouse&quot;</span>, <span class="stringliteral">&quot;hat&quot;</span>, <span class="stringliteral">&quot;mittens&quot;</span>, <span class="stringliteral">&quot;socks&quot;</span>, <span class="stringliteral">&quot;pants&quot;</span>, <span class="stringliteral">&quot;coat&quot;</span> };</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;        <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i = 0; i &lt; 50; i++ ) {</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;                L-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( names[ i % 10 ], names[ i % 9 ] );</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;        }</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;stress test a little&quot;</span>, unit_data_1cycle_g.compare( <a class="code" href="lru__cache_8cpp.xhtml#a5cc6945fc2f7ed6a7c8481972f4e172c" title="Dumps the cache for debugging.">dump</a>( L ) ) == 0 );</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;        <span class="comment">// Setup a little for the third test which verifies that scoped references inserted into the cache don&#39;t disappear.</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;        L3 = <span class="keyword">new</span> <a class="code" href="lru__cache_8cpp.xhtml#a3d24a3719faded87a48b68c87a6064a7" title="LRUCache with large data for use in the unit tests.">unit_lru_type3</a>(2);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;        <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i = 0; i &lt; 10; i++ ) {</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;                test_big_data B;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;                snprintf( B.buffer, 1000, <span class="stringliteral">&quot;%d\n&quot;</span>, i );</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;                L3-&gt;insert( i, B );</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;        }</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;        <span class="comment">// Check that clear fully clears.</span></div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;        <span class="comment">//   Bug discovered by:  月迷津渡 gdcex@qq.com</span></div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;very size before clear.&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3a521aa7646757957a53850db90ad289" title="Gets the current abstract size of the cache.">size</a>() &gt; 0) );</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;        L-&gt;<a class="code" href="classLRUCache.xhtml#ad59b44b509fcef46b3666695c5e4a1aa" title="Clears all storage and indices.">clear</a>();</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;very size after clear.&quot;</span>, (L-&gt;<a class="code" href="classLRUCache.xhtml#a3a521aa7646757957a53850db90ad289" title="Gets the current abstract size of the cache.">size</a>() == 0) );</div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa2a4504968cf4e8abfc7b706106d4084" title="Use to end a unit test in success.">unit_pass</a>();</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;}</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#define TRANSACTIONS 50000</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00129"></a><span class="lineno"><a class="code" href="lru__cache_8cpp.xhtml#a92b18aa64a57a02c1adc3d1b98924bb5">  129</a></span>&#160;<a class="code" href="unit__test_8h.xhtml#ad3bccea4c3142d58fd5510f65503b300" title="Start a new test definition.">DEFINE_TEST</a>( lru_cache_stress ) {</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;        <span class="comment">// Stress test the implementation a little more using no objects</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;        <a class="code" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">unit_lru_type2</a> *L2 = <span class="keyword">new</span> <a class="code" href="lru__cache_8cpp.xhtml#ac6438824538d155d5a47bd7b2e7228ea" title="LRUCache POD type for use in the unit tests.">unit_lru_type2</a>(5);</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;        <span class="keywordtype">double</span> t0 = <a class="code" href="unit__test_8h.xhtml#a7f0155f7ecefd56c2380285420e85e05" title="Gets the current CPU time with microsecond accuracy.">cputime</a>();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;        <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i = 0; i &lt; TRANSACTIONS; i++ ) {</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;                L2-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( i, i-1 );</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;        }</div>
<div class="line"><a name="l00136"></a><span class="lineno">  136</span>&#160;        <span class="keywordtype">double</span> t1 = <a class="code" href="unit__test_8h.xhtml#a7f0155f7ecefd56c2380285420e85e05" title="Gets the current CPU time with microsecond accuracy.">cputime</a>();</div>
<div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;        <span class="keyword">delete</span> L2;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;        <a class="code" href="unit__test_8h.xhtml#a2fdd86314c7b39ab4274a36655e833f1" title="Prints to stdout the results of timing an event.">print_cputime</a>( <span class="stringliteral">&quot;(int,int) inserts&quot;</span>, t1-t0, TRANSACTIONS );</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa2a4504968cf4e8abfc7b706106d4084" title="Use to end a unit test in success.">unit_pass</a>();</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;}</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="code" href="lru__cache_8cpp.xhtml#a6288e1898f19682582c52a5005e10ada">  143</a></span>&#160;<a class="code" href="unit__test_8h.xhtml#ad3bccea4c3142d58fd5510f65503b300" title="Start a new test definition.">DEFINE_TEST</a>( lru_cache_scope_check ) {</div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;        test_big_data* B = L3-&gt;<a class="code" href="classLRUCache.xhtml#a8531c23ed890dac39debfb9f878cab9d" title="Fetches a pointer to cache data.">fetch_ptr</a>( 9 );</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;scope check element L3[1]&quot;</span>, ( strncmp( B-&gt;buffer, <span class="stringliteral">&quot;9\n&quot;</span>, 1000 ) == 0 ) );</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;        B = L3-&gt;<a class="code" href="classLRUCache.xhtml#a8531c23ed890dac39debfb9f878cab9d" title="Fetches a pointer to cache data.">fetch_ptr</a>( 8 );</div>
<div class="line"><a name="l00147"></a><span class="lineno">  147</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20" title="Use within a Unit Test to verify a condition.">unit_assert</a>( <span class="stringliteral">&quot;scope check element L3[2]&quot;</span>, ( strncmp( B-&gt;buffer, <span class="stringliteral">&quot;8\n&quot;</span>, 1000 ) == 0 ) );</div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;        <span class="keyword">delete</span> <a class="code" href="lru__cache_8cpp.xhtml#a438505aa6f516b0b948a59d1578a9b1c" title="Scoping test object.">L3</a>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa2a4504968cf4e8abfc7b706106d4084" title="Use to end a unit test in success.">unit_pass</a>();</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;}</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;<span class="preprocessor">#ifdef _REENTRANT</span></div>
<div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;boost/thread/thread.hpp&gt;</span></div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;<span class="preprocessor">#define THREAD_TRANS 20000</span></div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define THREAD_COUNT 10</span></div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;<a class="code" href="classLRUCache.xhtml" title="Template cache with an LRU removal policy.">unit_lru_type2</a> *L4;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;<span class="keywordtype">void</span> insert_junk(){</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;        <span class="keywordflow">for</span>( <span class="keywordtype">int</span> i = 0; i &lt; THREAD_TRANS; i++ ) {</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;                L4-&gt;<a class="code" href="classLRUCache.xhtml#a47523c87a56e9bd718566b2659366fd1" title="Inserts a key-data pair into the cache and removes entries if neccessary.">insert</a>( i, i+1 );</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;                L4-&gt;<a class="code" href="classLRUCache.xhtml#a34e974cf87c08620131a9b006443e93b" title="Removes a key-data pair from the cache.">remove</a>( i-5 );</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;                L4-&gt;<a class="code" href="classLRUCache.xhtml#a5896c9481fb649f5570fb8677c33b49c" title="Fetches a copy of cached data.">fetch</a>( i-3 );</div>
<div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                L4-&gt;<a class="code" href="classLRUCache.xhtml#a844206e9e2fde04aaf11c638725f2c29" title="Touches a key in the Cache and makes it the most recently used.">touch</a>( i-10 );</div>
<div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;        }</div>
<div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;}</div>
<div class="line"><a name="l00168"></a><span class="lineno">  168</span>&#160;</div>
<div class="line"><a name="l00170"></a><span class="lineno"><a class="code" href="lru__cache_8cpp.xhtml#a7403186cac9b12671fdda33ea88bceb0">  170</a></span>&#160;<a class="code" href="unit__test_8h.xhtml#ad3bccea4c3142d58fd5510f65503b300" title="Start a new test definition.">DEFINE_TEST</a>( lru_cache_threads ) {</div>
<div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;        L4 = <span class="keyword">new</span> <a class="code" href="lru__cache_8cpp.xhtml#ac6438824538d155d5a47bd7b2e7228ea" title="LRUCache POD type for use in the unit tests.">unit_lru_type2</a>( 20 );</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;        boost::thread_group thrds;</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;        <span class="keywordtype">double</span> t0 = <a class="code" href="unit__test_8h.xhtml#a7f0155f7ecefd56c2380285420e85e05" title="Gets the current CPU time with microsecond accuracy.">cputime</a>();</div>
<div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;        <span class="keywordflow">for</span> (<span class="keywordtype">int</span> i=0; i &lt; THREAD_COUNT; ++i)</div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                thrds.create_thread(&amp;insert_junk);</div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;        thrds.join_all();</div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;        <span class="keywordtype">double</span> t1 = <a class="code" href="unit__test_8h.xhtml#a7f0155f7ecefd56c2380285420e85e05" title="Gets the current CPU time with microsecond accuracy.">cputime</a>();</div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;        <a class="code" href="unit__test_8h.xhtml#a2fdd86314c7b39ab4274a36655e833f1" title="Prints to stdout the results of timing an event.">print_cputime</a>( <span class="stringliteral">&quot;(int,int) multithreaded inserts&quot;</span>, t1-t0, THREAD_TRANS*THREAD_COUNT*4 );</div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;        <span class="keyword">delete</span> L4;</div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;        <a class="code" href="unit__test_8h.xhtml#aa2a4504968cf4e8abfc7b706106d4084" title="Use to end a unit test in success.">unit_pass</a>();</div>
<div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;}</div>
<div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;</div>
<div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<a class="code" href="unit__test_8h.xhtml#a86b577b8af9cc6df174dc0e2e292c365" title="Start a Unit test run section.">UNIT_TEST_RUN</a>( <span class="stringliteral">&quot;LRU Cache&quot;</span> );</div>
<div class="line"><a name="l00186"></a><span class="lineno">  186</span>&#160;        <a class="code" href="unit__test_8h.xhtml#a758baec4c57fa6aeaf800e2c631a7d9f" title="Adds a defined test to test run.">ADD_TEST</a>( lru_cache_1cycle );</div>
<div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;        <a class="code" href="unit__test_8h.xhtml#a758baec4c57fa6aeaf800e2c631a7d9f" title="Adds a defined test to test run.">ADD_TEST</a>( lru_cache_stress );</div>
<div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;        <a class="code" href="unit__test_8h.xhtml#a758baec4c57fa6aeaf800e2c631a7d9f" title="Adds a defined test to test run.">ADD_TEST</a>( lru_cache_scope_check );</div>
<div class="line"><a name="l00189"></a><span class="lineno">  189</span>&#160;<span class="preprocessor">#ifdef _REENTRANT</span></div>
<div class="line"><a name="l00190"></a><span class="lineno">  190</span>&#160;<span class="preprocessor"></span>        <a class="code" href="unit__test_8h.xhtml#a758baec4c57fa6aeaf800e2c631a7d9f" title="Adds a defined test to test run.">ADD_TEST</a>( lru_cache_threads );</div>
<div class="line"><a name="l00191"></a><span class="lineno">  191</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="preprocessor"></span><a class="code" href="unit__test_8h.xhtml#a732dd1ba2cfc9163d60e05628b4544dc" title="Finish a Unit Test run section.">UNIT_TEST_END</a>;</div>
<div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;<span class="preprocessor">#endif</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="lru__cache_8cpp.xhtml">lru_cache.cpp</a></li>
    <li class="footer">Generated on Sun Jun 10 2012 22:36:53 for C++ LRU Cache Template by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1 </li>
  </ul>
</div>
</body>
</html>
