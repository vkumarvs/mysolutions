<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>C++ LRU Cache Template: unit_test.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">C++ LRU Cache Template
   &#160;<span id="projectnumber">1.4</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.1 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.xhtml"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.xhtml"><span>Related&#160;Pages</span></a></li>
      <li><a href="annotated.xhtml"><span>Classes</span></a></li>
      <li class="current"><a href="files.xhtml"><span>Files</span></a></li>
      <li><a href="examples.xhtml"><span>Examples</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.xhtml"><span>File&#160;List</span></a></li>
      <li><a href="globals.xhtml"><span>File&#160;Members</span></a></li>
    </ul>
  </div>
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('unit__test_8h.xhtml','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">unit_test.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="unit__test_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/***************************************************************************</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> *   Copyright (C) 2004-2011 by Patrick Audley                             *</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *   paudley@blackcat.ca                                                   *</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *   http://patrickaudley.com                                              *</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> ***************************************************************************/</span></div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;<span class="preprocessor">#ifndef _UNIT_TEST_H</span></div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#define _UNIT_TEST_H</span></div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;<span class="preprocessor">#ifdef UNITTEST</span></div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;<span class="preprocessor"></span><span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;<span class="preprocessor">#include &lt;sys/time.h&gt;</span></div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;<span class="preprocessor">#include &lt;sys/resource.h&gt;</span></div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="preprocessor">#include &lt;sys/types.h&gt;</span></div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;<span class="preprocessor">#include &lt;time.h&gt;</span></div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160;<span class="keyword">struct </span>rusage ruse;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">int</span> getrusage();</div>
<div class="line"><a name="l00139"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#a7f0155f7ecefd56c2380285420e85e05">  139</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="unit__test_8h.xhtml#a7f0155f7ecefd56c2380285420e85e05" title="Gets the current CPU time with microsecond accuracy.">cputime</a>( <span class="keywordtype">void</span> ) {</div>
<div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;  getrusage( RUSAGE_SELF, &amp;ruse );</div>
<div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;        <span class="keywordflow">return</span> ( ruse.ru_utime.tv_sec + ruse.ru_stime.tv_sec + 1e-6 * (ruse.ru_utime.tv_usec + ruse.ru_stime.tv_usec ) );</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;}</div>
<div class="line"><a name="l00149"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#abf6a6c3c73f9e087ad15d8ed0ec0ba85">  149</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">double</span> <a class="code" href="unit__test_8h.xhtml#abf6a6c3c73f9e087ad15d8ed0ec0ba85" title="Calculates the transactions rate.">transactions_per_second</a>( <span class="keywordtype">double</span> run_time, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> transactions ) {</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;        <span class="keywordflow">return</span> (<span class="keywordtype">double</span>)transactions / run_time;</div>
<div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;}</div>
<div class="line"><a name="l00158"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#a2fdd86314c7b39ab4274a36655e833f1">  158</a></span>&#160;<span class="keyword">inline</span> <span class="keywordtype">void</span> <a class="code" href="unit__test_8h.xhtml#a2fdd86314c7b39ab4274a36655e833f1" title="Prints to stdout the results of timing an event.">print_cputime</a>( <span class="keyword">const</span> <span class="keywordtype">char</span>* msg, <span class="keywordtype">double</span> run_time, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> transactions = 0 ) {</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;        printf(<span class="stringliteral">&quot;  -&gt; %s:  %7.3f seconds CPU time&quot;</span>, msg, run_time );</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;        <span class="keywordflow">if</span>( transactions != 0 )</div>
<div class="line"><a name="l00161"></a><span class="lineno">  161</span>&#160;                printf( <span class="stringliteral">&quot;  (%7.3f transactions/second)&quot;</span>, <a class="code" href="unit__test_8h.xhtml#abf6a6c3c73f9e087ad15d8ed0ec0ba85" title="Calculates the transactions rate.">transactions_per_second</a>( run_time, transactions ) );</div>
<div class="line"><a name="l00162"></a><span class="lineno">  162</span>&#160;        printf( <span class="stringliteral">&quot;\n&quot;</span> );</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;}</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;</div>
<div class="line"><a name="l00166"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#a62a6058fdd96dcd306fba96626b2cc71">  166</a></span>&#160;<span class="keyword">typedef</span> bool(*<a class="code" href="unit__test_8h.xhtml#a62a6058fdd96dcd306fba96626b2cc71" title="typedef for unittest functions">test_func</a>)(void);</div>
<div class="line"><a name="l00168"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#a76894e75beeadd2872f2f5909b43e36f">  168</a></span>&#160;<span class="keyword">typedef</span> std::vector&lt; test_func &gt; <a class="code" href="unit__test_8h.xhtml#a76894e75beeadd2872f2f5909b43e36f" title="typedef for vectors of unittest functions">test_vector</a>;</div>
<div class="line"><a name="l00169"></a><span class="lineno">  169</span>&#160;</div>
<div class="line"><a name="l00174"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#a5f3fe0e0e85d0dc03672f96e5e95856f">  174</a></span>&#160;<span class="preprocessor">#define UNIT_TEST_DEFINES \</span></div>
<div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;<span class="preprocessor">  test_vector * add_test( test_func x ) { \</span></div>
<div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="preprocessor">    static test_vector unit_tests; \</span></div>
<div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;<span class="preprocessor">    if( x != NULL ) unit_tests.push_back( x ); \</span></div>
<div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="preprocessor">    return &amp;unit_tests; \</span></div>
<div class="line"><a name="l00179"></a><span class="lineno">  179</span>&#160;<span class="preprocessor">  }</span></div>
<div class="line"><a name="l00180"></a><span class="lineno">  180</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00184"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#ad3bccea4c3142d58fd5510f65503b300">  184</a></span>&#160;<span class="preprocessor">#define DEFINE_TEST(test_name) bool unit_test_##test_name (void)</span></div>
<div class="line"><a name="l00185"></a><span class="lineno">  185</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00191"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#a758baec4c57fa6aeaf800e2c631a7d9f">  191</a></span>&#160;<span class="preprocessor">#define ADD_TEST(test_name) add_test( &amp;unit_test_##test_name );</span></div>
<div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00197"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#a86b577b8af9cc6df174dc0e2e292c365">  197</a></span>&#160;<span class="preprocessor">#define UNIT_TEST_RUN( suite ) \</span></div>
<div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">int main(void) { \</span></div>
<div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;<span class="preprocessor">  bool result = true; \</span></div>
<div class="line"><a name="l00200"></a><span class="lineno">  200</span>&#160;<span class="preprocessor">  std::cout &lt;&lt; &quot;---[ &quot; &lt;&lt; suite &lt;&lt; &quot; ]--- &quot; &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00201"></a><span class="lineno">  201</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00205"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#aa37d553e7d644c165c888bed8908de20">  205</a></span>&#160;<span class="preprocessor">#define unit_assert( msg, cond ) \</span></div>
<div class="line"><a name="l00206"></a><span class="lineno">  206</span>&#160;<span class="preprocessor">  std::cout &lt;&lt; &quot;  &quot; &lt;&lt; msg &lt;&lt; &quot;: &quot; &lt;&lt; std::flush; \</span></div>
<div class="line"><a name="l00207"></a><span class="lineno">  207</span>&#160;<span class="preprocessor">  if( !cond ) { std::cout &lt;&lt; &quot;FAILED&quot; &lt;&lt; std::endl; return false; } \</span></div>
<div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="preprocessor">  std::cout &lt;&lt; &quot;PASSED&quot; &lt;&lt; std::endl;</span></div>
<div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00213"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#aa2a4504968cf4e8abfc7b706106d4084">  213</a></span>&#160;<span class="preprocessor">#define unit_pass() return true;</span></div>
<div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00218"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#a3476c32ea638214246ee65f561b6358b">  218</a></span>&#160;<span class="preprocessor">#define unit_fail() return false;</span></div>
<div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00222"></a><span class="lineno"><a class="code" href="unit__test_8h.xhtml#a732dd1ba2cfc9163d60e05628b4544dc">  222</a></span>&#160;<span class="preprocessor">#define UNIT_TEST_END \</span></div>
<div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="preprocessor">  test_vector *T = add_test( NULL ); \</span></div>
<div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor">  for( unsigned short i = 0; i &lt; T-&gt;size(); i++ ) { \</span></div>
<div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;<span class="preprocessor">     bool testresult = (*(*T)[i])(); \</span></div>
<div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="preprocessor">     if( result == true &amp;&amp; testresult == false ) { result = false; } \</span></div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;<span class="preprocessor">  } \</span></div>
<div class="line"><a name="l00228"></a><span class="lineno">  228</span>&#160;<span class="preprocessor">  return !result; \</span></div>
<div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">}</span></div>
<div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="preprocessor">#endif // UNITTEST</span></div>
<div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00233"></a><span class="lineno">  233</span>&#160;<span class="preprocessor">#endif // _UNIT_TEST_H</span></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="unit__test_8h.xhtml">unit_test.h</a></li>
    <li class="footer">Generated on Sun Jun 10 2012 22:36:56 for C++ LRU Cache Template by
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.1 </li>
  </ul>
</div>
</body>
</html>
